-- ========================================
-- Fully Automatic Fishing Script - MAIN
-- Auto Everything - No Buttons, Just Run
-- With Death Recovery System + Auto Best Rod + Auto Buy Rods + Auto Buy Bait + Quest System
-- ========================================

if not game:IsLoaded() then
    game.Loaded:Wait()
end
local player = game.Players.LocalPlayer
if not player.Character then
    player.CharacterAdded:Wait()
end
if not player.Character:FindFirstChild("HumanoidRootPart") then
    player.Character:WaitForChild("HumanoidRootPart")
end

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService('UserInputService')
local VirtualUser = game:GetService('VirtualUser')
local GuiService = game:GetService('GuiService')

-- ========================================
-- CONFIG SYSTEM
-- ========================================
_G.FishingConfig = _G.FishingConfig or {}
local Config = _G.FishingConfig

-- ตั้งค่า Default
Config.FishingMode = Config.FishingMode or "Instant" -- "Normal" หรือ "Instant"

-- ========================================
-- SHARED VARIABLES FOR UI CONNECTION
-- ========================================
_G.FishingScript = _G.FishingScript or {}
local FishingData = _G.FishingScript

-- ========================================
-- DATA INITIALIZATION
-- ========================================

-- Game Data Systems
local Replion = require(ReplicatedStorage.Packages.Replion).Client
local playerData = Replion:WaitReplion("Data")

-- Net Systems
local Net = require(ReplicatedStorage.Packages.Net)
local ItemUtility = require(ReplicatedStorage.Shared.ItemUtility)

-- Fishing System
local netPath = ReplicatedStorage:WaitForChild('Packages')
    :WaitForChild('_Index')
    :WaitForChild('sleitnick_net@0.2.0')
    :WaitForChild('net')
local fishingCompleted = netPath:WaitForChild('RE/FishingCompleted')
local equipBaitFromHotbar = netPath:WaitForChild('RE/EquipToolFromHotbar')
local equipBait = netPath:WaitForChild('RE/EquipBait')
local unequipBait = netPath:WaitForChild('RE/UnequipToolFromHotbar')
local sellAllItems = netPath:WaitForChild('RF/SellAllItems')

-- Rod Equipment System
local EquipItem = Net:RemoteEvent("EquipItem")
local UnequipItem = Net:RemoteEvent("UnequipItem")

-- Purchase Systems
local PurchaseFishingRod = netPath:WaitForChild('RF/PurchaseFishingRod')
local PurchaseBait = netPath:WaitForChild('RF/PurchaseBait')

-- Fishing Locations
local fishingSpots = {
    CFrame.new(-563.952271, 16.3221607, 105.55291, 0.901341021, -2.87254824e-08, -0.433110088, 1.4530392e-08, 1, -3.60846926e-08, 0.433110088, 2.62313531e-08, 0.901341021),
    CFrame.new(-543.255615, 16.5081921, 118.090034, 0.907561541, -5.3222089e-09, -0.419919103, 1.44128744e-08, 1, 1.84758502e-08, 0.419919103, -2.28202115e-08, 0.907561541),
    CFrame.new(-551.49054, 16.2784729, 112.607697, 0.903957188, -2.46232421e-08, -0.427622914, -3.04253311e-09, 1, -6.40133138e-08, 0.427622914, 5.91663571e-08, 0.903957188)
}

-- Treasure Room Locations (สำหรับเควส Label1 - Catch 300 Rare/Epic fish)
local treasureRoomSpots = {
    CFrame.new(-3597.49609, -275.720337, -1640.60571, 0.996043622, -9.39903586e-08, 0.088865906, 9.43796294e-08, 1, -1.78511581e-10, -0.088865906, 8.56493632e-09, 0.996043622),
    CFrame.new(-3602.96851, -283.093658, -1613.07812, 0.828757942, 3.3355267e-08, 0.559607208, 2.71030043e-08, 1, -9.9743346e-08, -0.559607208, 9.78301316e-08, 0.828757942),
    CFrame.new(-3575.4585, -281.312958, -1653.94373, 0.936532855, -3.16738529e-08, 0.350579798, 5.51399815e-08, 1, -5.69529526e-08, -0.350579798, 7.26692804e-08, 0.936532855)
}

-- Sisyphus Statue Locations (สำหรับเควส Label2 & Label3 - Mythic/Secret fish)
local sisyphusSpots = {
    CFrame.new(-3733.35889, -135.074417, -1011.21942, -0.952594638, -1.78196888e-08, -0.304242402, -4.52336018e-08, 1, 8.30574436e-08, 0.304242402, 9.28820612e-08, -0.952594638),
    CFrame.new(-3761.28833, -135.073914, -996.474487, -0.622828245, 1.10507123e-08, -0.782358587, 8.67523724e-08, 1, -5.49378711e-08, 0.782358587, -1.02088322e-07, -0.622828245),
    CFrame.new(-3784.33447, -135.073914, -945.991699, 0.274454981, 7.33707637e-08, -0.961599946, -2.1993114e-09, 1, 7.56730003e-08, 0.961599946, -1.86539744e-08, 0.274454981),
    CFrame.new(-3767.47461, -135.074417, -908.894592, 0.638411939, -2.1528388e-08, -0.769694865, 1.8830697e-09, 1, -2.64081432e-08, 0.769694865, 1.54098849e-08, 0.638411939),
    CFrame.new(-3712.54736, -135.074417, -886.956055, 0.977025032, 1.72677197e-08, 0.213124603, -1.54296824e-08, 1, -1.02875681e-08, -0.213124603, 6.76276679e-09, 0.977025032)
}

-- Auto Variables
local autoFishingRunning = true
local autoSellRunning = true
local antiAfkEnabled = true
local FishingController
local deathRecoveryEnabled = true
local isRespawning = false
local bestRodEquipped = false
local bestBaitEquipped = false
local autoBuyRodsEnabled = true
local autoBuyBaitEnabled = true
local autoEquipBestBait = true
local lastPurchaseAttempt = 0
local lastBaitPurchaseAttempt = 0
local isQuestMode = false
local currentFishingLocation = "normal"
local questCheckInterval = 30
local lastQuestLocation = ""
local hasLocationChanged = false

-- Variables for Instant Mode
local Camera = workspace.CurrentCamera
local currentCompletedThread = nil
local isInCycle = false

-- ========================================
-- SHARED DATA FOR UI
-- ========================================
FishingData.getPlayerMoney = function()
    return playerData:Get("Money") or playerData:Get("Coins") or 0
end

FishingData.getInventoryCount = function()
    local totalItems = 0
    local inventory = playerData:Get("Inventory")
    
    if inventory then
        for category, items in pairs(inventory) do
            if category ~= "Fishing Rods" and category ~= "Baits" then
                if type(items) == "table" then
                    for _, item in pairs(items) do
                        if item.Quantity then
                            totalItems = totalItems + item.Quantity
                        else
                            totalItems = totalItems + 1
                        end
                    end
                end
            end
        end
    end
    
    return totalItems
end

FishingData.formatMoney = function(amount)
    if amount >= 1000000 then
        return string.format("%.1fM", amount / 1000000)
    elseif amount >= 1000 then
        return string.format("%.1fK", amount / 1000)
    else
        return tostring(amount)
    end
end

FishingData.getQuestText = function(labelName)
    local success, result = pcall(function()
        return workspace["!!! MENU RINGS"]["Deep Sea Tracker"].Board.Gui.Content[labelName].Text
    end)
    
    if success then
        return result
    else
        return ""
    end
end

FishingData.getQuestProgress = function(questText)
    if questText:find("100%%") then
        return 100
    end
    
    local progress = questText:match("(%d+)%%")
    if progress then
        return tonumber(progress)
    end
    
    return 0
end

FishingData.checkQuestStatus = function()
    local quest1 = FishingData.getQuestText("Label1")
    local quest2 = FishingData.getQuestText("Label2")
    local quest3 = FishingData.getQuestText("Label3")
    local quest4 = FishingData.getQuestText("Label4")
    
    local progress1 = FishingData.getQuestProgress(quest1)
    local progress2 = FishingData.getQuestProgress(quest2)
    local progress3 = FishingData.getQuestProgress(quest3)
    local progress4 = FishingData.getQuestProgress(quest4)
    
    return {
        quest1 = progress1,
        quest2 = progress2,
        quest3 = progress3,
        quest4 = progress4,
        questTexts = {quest1, quest2, quest3, quest4}
    }
end

FishingData.getRodsList = function()
    local rods = playerData:Get({"Inventory", "Fishing Rods"}) or {}
    local equipped = playerData:Get("EquippedItems") or {}
    
    -- ฟังก์ชันดึงข้อมูล rod จาก ReplicatedStorage
    local function getRodDataFromGame(rodId)
        local success, rodInfo = pcall(function()
            local rodsFolder = game:GetService("ReplicatedStorage")["Fishing Rods"]
            
            for _, child in pairs(rodsFolder:GetChildren()) do
                if child:IsA("ModuleScript") then
                    local moduleData = require(child)
                    if moduleData and moduleData.Data and moduleData.Data.Id == rodId then
                        return {
                            name = moduleData.Data.Name,
                            tier = moduleData.Data.Tier or 1
                        }
                    end
                end
            end
            return nil
        end)
        
        return success and rodInfo or nil
    end
    
    local result = {}
    for i, rod in ipairs(rods) do
        local isEquipped = table.find(equipped, rod.UUID) ~= nil
        local rodNameText = "Unknown Rod"
        
        -- ลองดึงจากเกมก่อน
        local gameData = getRodDataFromGame(rod.Id)
        if gameData and gameData.name then
            rodNameText = gameData.name
        else
            -- fallback ไปใช้ hardcode data ถ้าไม่เจอในเกม
            local rodData = {
                [1] = 'Starter Rod',
                [79] = 'Luck Rod', 
                [76] = 'Carbon Rod',
                [85] = 'Grass Rod',
                [77] = 'Demascus Rod',
                [78] = 'Ice Rod',
                [4] = 'Lucky Rod',
                [80] = 'Midnight Rod',
                [6] = 'Steampunk Rod',
                [7] = 'Chrome Rod',
                [5] = 'Astral Rod',
                [126] = 'Ares rod',
                [168] = 'Angler Rod',
                [169] = 'Ghostfinn Rod', -- เพิ่ม Ghostfinn Rod
            }
            
            if rodData[rod.Id] then
                rodNameText = rodData[rod.Id]
            else
                rodNameText = "Rod ID: " .. rod.Id
            end
        end
        
        table.insert(result, {
            name = rodNameText,
            id = rod.Id,
            uuid = rod.UUID,
            isEquipped = isEquipped
        })
    end
    
    return result
end

FishingData.getBaitsList = function()
    local baits = playerData:Get({"Inventory", "Baits"}) or {}
    local currentBaitId = playerData:Get("SelectedBait") -- เช็ค bait ที่ใช้อยู่
    
    -- ฟังก์ชันดึงข้อมูล bait จาก ReplicatedStorage
    local function getBaitDataFromGame(baitId)
        local success, baitInfo = pcall(function()
            local baitsFolder = game:GetService("ReplicatedStorage").Baits
            
            for _, child in pairs(baitsFolder:GetChildren()) do
                if child:IsA("ModuleScript") then
                    local moduleData = require(child)
                    if moduleData and moduleData.Data and moduleData.Data.Id == baitId then
                        return {
                            name = moduleData.Data.Name,
                            price = moduleData.Price or 0,
                            tier = moduleData.Data.Tier or 1
                        }
                    end
                end
            end
            return nil
        end)
        
        return success and baitInfo or nil
    end
    
    local result = {}
    for i, bait in ipairs(baits) do
        local baitNameText = "Unknown Bait"
        local isEquipped = (currentBaitId and currentBaitId == bait.Id)
        
        -- ลองดึงจากเกมก่อน
        local gameData = getBaitDataFromGame(bait.Id)
        if gameData and gameData.name then
            baitNameText = gameData.name
        else
            -- fallback ไปใช้ hardcode data ถ้าไม่เจอในเกม
            local baitData = {
                [1] = 'Starter Bait',
                [2] = 'Luck Bait',
                [3] = 'Midnight Bait',
                [6] = 'Chroma Bait',
                [8] = 'Dark Matter Bait',
                [15] = 'Corrupt Bait',
                [16] = 'Aether Bait',
                [17] = 'Nature Bait',
            }
            
            if baitData[bait.Id] then
                baitNameText = baitData[bait.Id]
            else
                baitNameText = "Bait ID: " .. bait.Id
            end
        end
        
        table.insert(result, {
            name = baitNameText,
            id = bait.Id,
            uuid = bait.UUID,
            quantity = bait.Quantity or 1,
            isEquipped = isEquipped
        })
    end
    
    return result
end

FishingData.getSystemStatus = function()
    return {
        autoFishing = autoFishingRunning,
        autoSell = autoSellRunning,
        antiAfk = antiAfkEnabled,
        deathRecovery = deathRecoveryEnabled,
        bestRodAuto = bestRodEquipped,
        bestBaitAuto = bestBaitEquipped,
        autoBuyRods = autoBuyRodsEnabled,
        autoBuyBait = autoBuyBaitEnabled,
        questMode = isQuestMode,
        currentLocation = currentFishingLocation,
        fishingMode = Config.FishingMode
    }
end

-- เพิ่มฟังก์ชันสำหรับเปลี่ยน Config
FishingData.setFishingMode = function(mode)
    if mode == "Normal" or mode == "Instant" then
        Config.FishingMode = mode
        print("Fishing Mode changed to: " .. mode)
        return true
    end
    return false
end

FishingData.getFishingMode = function()
    return Config.FishingMode
end

-- ========================================
-- UTILITY FUNCTIONS
-- ========================================

-- เช็คว่ามี Astral Rod หรือไม่
local function hasAstralRod()
    local rods = playerData:Get({"Inventory", "Fishing Rods"}) or {}
    
    for _, rod in ipairs(rods) do
        if rod.Id == 5 then -- Astral Rod ID = 5
            return true
        end
    end
    
    return false
end

-- ========================================
-- QUEST SYSTEM
-- ========================================

-- กำหนดจุดตกปลาตามเควส
local function setFishingLocationByQuest(questProgress)
    local newLocation = ""
    local spots = fishingSpots
    
    if questProgress.quest1 < 100 then
        newLocation = "treasure"
        spots = treasureRoomSpots
    elseif questProgress.quest2 < 100 or questProgress.quest3 < 100 then
        newLocation = "sisyphus"
        spots = sisyphusSpots
    else
        newLocation = "normal"
        spots = fishingSpots
    end
    
    if lastQuestLocation ~= newLocation then
        lastQuestLocation = newLocation
        currentFishingLocation = newLocation
        hasLocationChanged = true
    else
        hasLocationChanged = false
    end
    
    return spots
end

-- ระบบเช็คและเปลี่ยนจุดตกปลาอัตโนมัติ
local function startQuestSystem()
    spawn(function()
        while isQuestMode do
            wait(questCheckInterval)
            
            if hasAstralRod() then
                local questProgress = FishingData.checkQuestStatus()
                local newSpots = setFishingLocationByQuest(questProgress)
                
                if hasLocationChanged and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local randomSpot = newSpots[math.random(1, #newSpots)]
                    LocalPlayer.Character.HumanoidRootPart.CFrame = randomSpot
                    hasLocationChanged = false
                end
            end
        end
    end)
end

-- ========================================
-- AUTO BUY BAIT SYSTEM
-- ========================================

local baitData = {
    { id = 2, name = 'Luck Bait', price = 1000 },
    { id = 3, name = 'Midnight Bait', price = 3000 },
    { id = 17, name = 'Nature Bait', price = 83500 },
    { id = 6, name = 'Chroma Bait', price = 290000 },
    { id = 8, name = 'Dark Matter Bait', price = 630000 },
    { id = 15, name = 'Corrupt Bait', price = 1148484 },
    { id = 16, name = 'Aether Bait', price = 3700000 },
}

local function hasBait(baitId)
    local baits = playerData:Get({"Inventory", "Baits"}) or {}
    
    for _, bait in ipairs(baits) do
        if bait.Id == baitId then
            return true, bait.Quantity or 1
        end
    end
    
    return false, 0
end

local function getNextBaitToBuy()
    local currentMoney = FishingData.getPlayerMoney()
    local nextBait = nil
    
    -- เรียงจากแพงไปถูก เพื่อซื้อเบทที่ดีที่สุดที่สามารถซื้อได้
    for i = #baitData, 1, -1 do
        local bait = baitData[i]
        local hasBaitItem, quantity = hasBait(bait.id)
        
        -- ซื้อถ้ามีเงินพอ และยังไม่มีเบทนี้เลย (เพราะ Bait ซื้อครั้งเดียวใช้ได้ตลอด)
        if currentMoney >= bait.price and not hasBaitItem then
            nextBait = bait
            break
        end
    end
    
    return nextBait
end

local function purchaseBait(baitId, baitName, price)
    local success = pcall(function()
        local args = { baitId, 1 } -- ซื้อ 1 ชิ้นเท่านั้น (เพราะใช้ได้ตลอด)
        PurchaseBait:InvokeServer(unpack(args))
    end)
    
    return success
end

local function startAutoBuyBait()
    spawn(function()
        while autoBuyBaitEnabled do
            wait(30) -- เช็คทุก 30 วินาที (ช้าลงเพราะไม่ต้องซื้อบ่อย)
            
            if autoBuyBaitEnabled and tick() - lastBaitPurchaseAttempt >= 60 then -- รอ 60 วินาทีระหว่างการซื้อ
                local nextBait = getNextBaitToBuy()
                
                if nextBait then
                    local purchaseSuccess = purchaseBait(nextBait.id, nextBait.name, nextBait.price)
                    
                    if purchaseSuccess then
                        lastBaitPurchaseAttempt = tick()
                        print("ซื้อ " .. nextBait.name .. " สำเร็จ! (ใช้ได้ตลอด)")
                        wait(3) -- รอ 3 วินาที
                    end
                end
            end
        end
    end)
end

-- ========================================
-- AUTO BUY RODS SYSTEM
-- ========================================

local rodData = {
    { id = 79, name = 'Luck Rod', price = 350 },
    { id = 76, name = 'Carbon Rod', price = 900 },
    { id = 85, name = 'Grass Rod', price = 1500 },
    { id = 77, name = 'Demascus Rod', price = 3000 },
    { id = 78, name = 'Ice Rod', price = 5000 },
    { id = 4, name = 'Lucky Rod', price = 15000 },
    { id = 80, name = 'Midnight Rod', price = 50000 },
    { id = 6, name = 'Steampunk Rod', price = 215000 },
    { id = 7, name = 'Chrome Rod', price = 437000 },
    { id = 5, name = 'Astral Rod', price = 1000000 },
    { id = 126, name = 'Ares rod', price = 3000000 },
    { id = 168, name = 'Angler Rod', price = 8000000 },
}

local function hasRod(rodId)
    local rods = playerData:Get({"Inventory", "Fishing Rods"}) or {}
    
    for _, rod in ipairs(rods) do
        if rod.Id == rodId then
            return true
        end
    end
    
    return false
end

local function getNextRodToBuy()
    local currentMoney = FishingData.getPlayerMoney()
    local nextRod = nil
    
    for i = #rodData, 1, -1 do
        local rod = rodData[i]
        if currentMoney >= rod.price and not hasRod(rod.id) then
            nextRod = rod
            break
        end
    end
    
    return nextRod
end

local function purchaseRod(rodId, rodName, price)
    local success = pcall(function()
        local args = { rodId }
        PurchaseFishingRod:InvokeServer(unpack(args))
    end)
    
    return success
end

local function rejoinServer()
    wait(2)
    
    local TeleportService = game:GetService("TeleportService")
    local success = pcall(function()
        TeleportService:Teleport(game.PlaceId, LocalPlayer)
    end)
    
    if not success then
        pcall(function()
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, LocalPlayer)
        end)
    end
end

local function startAutoBuyRods()
    spawn(function()
        while autoBuyRodsEnabled do
            wait(10)
            
            if autoBuyRodsEnabled and tick() - lastPurchaseAttempt >= 30 then
                local purchasedAny = false
                
                while true do
                    local nextRod = getNextRodToBuy()
                    
                    if nextRod then
                        local purchaseSuccess = purchaseRod(nextRod.id, nextRod.name, nextRod.price)
                        
                        if purchaseSuccess then
                            purchasedAny = true
                            wait(1)
                        else
                            break
                        end
                    else
                        break
                    end
                end
                
                if purchasedAny then
                    lastPurchaseAttempt = tick()
                    wait(3)
                    rejoinServer()
                    break
                end
            end
        end
    end)
end

-- ========================================
-- AUTO-EQUIP BEST BAIT SYSTEM
-- ========================================

local function getBestBait()
    local baits = playerData:Get({"Inventory", "Baits"}) or {}
    local bestBait, bestScore = nil, 0
    
    -- คะแนนเบทตามลำดับความดี (จากแพงไปถูก)
    local baitScores = {
        [16] = 7000, -- Aether Bait
        [15] = 6000, -- Corrupt Bait
        [8] = 5000,  -- Dark Matter Bait
        [6] = 4000,  -- Chroma Bait
        [17] = 3000, -- Nature Bait
        [3] = 2000,  -- Midnight Bait
        [2] = 1000,  -- Luck Bait
        [1] = 100,   -- Starter Bait
    }
    
    for _, bait in ipairs(baits) do
        local score = baitScores[bait.Id] or 0
        
        if score > bestScore and (bait.Quantity or 1) > 0 then
            bestScore = score
            bestBait = bait
        end
    end
    
    return bestBait
end

local function equipBestBait()
    local success, bestBait = pcall(getBestBait)
    if not success or not bestBait then 
        -- ถ้าไม่มีเบทหรือหาไม่เจอ ใช้ starter bait (id: 1)
        local args = { 1 }
        equipBait:FireServer(unpack(args))
        return false
    end
    
    -- ใส่เบทที่ดีที่สุดโดยใช้ ID ของเบท
    local success = pcall(function()
        local args = { bestBait.Id }
        equipBait:FireServer(unpack(args))
    end)
    
    if success then
        wait(0.2)
        return true
    else
        -- ถ้าไม่สำเร็จ ใช้ starter bait แทน
        local args = { 1 }
        equipBait:FireServer(unpack(args))
        return false
    end
end

-- ========================================
-- AUTO-EQUIP BEST ROD SYSTEM
-- ========================================

local function getBestRod()
    local rods = playerData:Get({"Inventory", "Fishing Rods"}) or {}
    local bestRod, bestScore = nil, 0
    
    for _, rod in ipairs(rods) do
        local success, data = pcall(function()
            return ItemUtility:GetItemData(rod.Id)
        end)
        
        if success and data and data.Data.Type == "Fishing Rods" and not data.IsSkin then
            local score = (data.Data.Tier or 1) * 1000
            if data.RollData then
                score = score + (data.RollData.BaseLuck or 1) * 100
            end
            if score > bestScore then
                bestScore = score
                bestRod = rod
            end
        end
    end
    
    return bestRod
end

local function equipBestRod()
    local success, bestRod = pcall(getBestRod)
    if not success or not bestRod then 
        return false
    end
    
    local equipped = playerData:Get("EquippedItems") or {}
    
    if table.find(equipped, bestRod.UUID) then
        return true
    end
    
    if #equipped >= 5 then
        local success = pcall(function()
            UnequipItem:FireServer(equipped[1])
        end)
        if success then
            wait(0.2)
        end
    end
    
    local success = pcall(function()
        EquipItem:FireServer(bestRod.UUID, "Fishing Rods")
    end)
    
    if success then
        wait(0.2)
        return true
    else
        return false
    end
end

-- ========================================
-- AUTO TELEPORT TO FISHING SPOT
-- ========================================

local function teleportToFishingSpot()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local spots
        
        if isQuestMode and hasAstralRod() then
            if currentFishingLocation == "treasure" then
                spots = treasureRoomSpots
            elseif currentFishingLocation == "sisyphus" then
                spots = sisyphusSpots
            else
                spots = fishingSpots
            end
        else
            spots = fishingSpots
        end
        
        local randomSpot = spots[math.random(1, #spots)]
        LocalPlayer.Character.HumanoidRootPart.CFrame = randomSpot
        
        return true
    end
    return false
end

-- ========================================
-- DEATH RECOVERY SYSTEM
-- ========================================

local function setupDeathRecovery()
    local function onCharacterAdded(character)
        if isRespawning then
            return
        end
        
        isRespawning = true
        bestRodEquipped = false
        bestBaitEquipped = false
        
        character:WaitForChild("HumanoidRootPart")
        character:WaitForChild("Humanoid")
        
        wait(3)
        
        teleportToFishingSpot()
        wait(1)
        
        equipBestRod()
        wait(1)
        
        equipBestBait()
        wait(0.5)
        
        -- ถือ Rod ใน hotbar slot 1
        local hotbarArgs = { 1 }
        equipBaitFromHotbar:FireServer(unpack(hotbarArgs))
        wait(0.2)
        
        FishingController = require(ReplicatedStorage.Controllers.FishingController)
        
        bestRodEquipped = true
        bestBaitEquipped = true
        
        if autoFishingRunning and not FishingController then
            task.spawn(autoFishingLoop)
        end
        
        isRespawning = false
    end
    
    LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
    
    local function onCharacterRemoving()
        if not isRespawning then
            FishingController = nil
            bestRodEquipped = false
            bestBaitEquipped = false
        end
    end
    
    LocalPlayer.CharacterRemoving:Connect(onCharacterRemoving)
    
    local function monitorHealth()
        spawn(function()
            while deathRecoveryEnabled do
                wait(1)
                
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                    local humanoid = LocalPlayer.Character.Humanoid
                    
                    if humanoid.Health <= 0 and not isRespawning then
                    end
                else
                    wait(2)
                end
            end
        end)
    end
    
    monitorHealth()
end

-- ========================================
-- ANTI-AFK SYSTEM
-- ========================================

local function startAntiAfk()
    spawn(function()
        local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
        
        while antiAfkEnabled do
            wait(240)
            
            if antiAfkEnabled then
                if isMobile then
                    pcall(function()
                        if game.Players.LocalPlayer.Character then
                            local humanoid = game.Players.LocalPlayer.Character:FindFirstChild('Humanoid')
                            if humanoid then
                                local originalSpeed = humanoid.WalkSpeed
                                humanoid.WalkSpeed = originalSpeed + 0.1
                                wait(0.1)
                                humanoid.WalkSpeed = originalSpeed
                            end
                        end
                        GuiService:SendNotification('Anti-AFK', 'Active')
                    end)
                else
                    pcall(function()
                        VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
                        VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
                    end)
                end
                
                pcall(function()
                    local camera = workspace.CurrentCamera
                    local originalCFrame = camera.CFrame
                    camera.CFrame = originalCFrame * CFrame.Angles(0, math.rad(0.1), 0)
                    wait(0.1)
                    camera.CFrame = originalCFrame
                end)
            end
        end
    end)
end

-- ========================================
-- AUTO SELL SYSTEM
-- ========================================

local function autoSellItems()
    local success, result = pcall(function()
        return sellAllItems:InvokeServer()
    end)
end

local function startAutoSell()
    spawn(function()
        while autoSellRunning do
            local itemCount = FishingData.getInventoryCount()
            
            if itemCount >= 500 then
                autoSellItems()
                wait(2)
            end
            
            wait(5)
        end
    end)
end

-- ========================================
-- INSTANT MODE FISHING FUNCTIONS
-- ========================================

local function callChargeFishingRod()
    local args = { workspace:GetServerTimeNow() }
    local ChargeFishingRod = Net:RemoteFunction("ChargeFishingRod")
    return ChargeFishingRod:InvokeServer(unpack(args))
end

local function callRequestMinigame()
    local mousePos = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
    local power = 1
    return FishingController:SendFishingRequestToServer(mousePos, power)
end

local function callFishingCompleted()
    pcall(function()
        game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RE/FishingCompleted"):FireServer()
    end)
end

local function isFishHooked()
    return FishingController:GetCurrentGUID() ~= nil
end

local function stopCurrentThread()
    if currentCompletedThread then
        currentCompletedThread = nil
    end
end

local function startCompletedLoop()
    stopCurrentThread()
    local threadId = tick()
    currentCompletedThread = threadId
    spawn(function()
        while autoFishingRunning and currentCompletedThread == threadId do
            callFishingCompleted()
            wait(0.1)
        end
    end)
end

local function runInstantFishingCycle()
    if isInCycle then
        return false
    end
    
    local success, onCooldown = pcall(function()
        return FishingController:OnCooldown()
    end)
    
    if not success or onCooldown then
        return false
    end
    
    isInCycle = true
    
    -- ถ้าปลาติดแล้ว แสดงว่า minigame เริ่มแล้ว
    if isFishHooked() then
        -- เริ่ม completed loop ทันที
        startCompletedLoop()
        isInCycle = false
        return true
    end
    
    -- ถ้าปลายังไม่ติด ให้โยนเบ๊ต
    local success1 = pcall(callChargeFishingRod)
    if not success1 then
        isInCycle = false
        return false
    end
    
    wait(0.1)
    
    local success2, result = pcall(callRequestMinigame)
    if not success2 or not result then
        isInCycle = false
        return false
    end
    
    -- หลังจากโยนเบ๊ต ให้เริ่ม completed loop เลย
    startCompletedLoop()
    wait(1)
    isInCycle = false
    return true
end

-- ========================================
-- NORMAL MODE FISHING FUNCTIONS
-- ========================================

local function getWaitTimeByRarity()
    local selectedRarity = LocalPlayer:GetAttribute('SelectedRarity') or 1
    local waitTime
    
    if selectedRarity >= 7 then
        waitTime = 0.12
    elseif selectedRarity >= 6 then
        waitTime = 0.15
    else
        waitTime = selectedRarity < 4 and 0.21 or 0.18
    end
    
    return waitTime
end

local function performFishingMinigame()
    local waitTime = getWaitTimeByRarity()
    FishingController:RequestFishingMinigameClick()
    task.wait(waitTime)
    fishingCompleted:FireServer()
end

local function chargeFishingRod()
    local camera = workspace.CurrentCamera
    local screenCenter = Vector2.new(
        camera.ViewportSize.X / 2,
        camera.ViewportSize.Y / 2
    )
    FishingController:RequestChargeFishingRod(screenCenter, true)
    task.wait(0.5)
end

local function runNormalFishingCycle()
    pcall(function()
        if FishingController:OnCooldown() then
            task.wait(0.2)
        elseif FishingController:GetCurrentGUID() then
            performFishingMinigame()
        else
            chargeFishingRod()
        end
    end)
end

-- ========================================
-- MAIN AUTO FISHING LOOP
-- ========================================

function autoFishingLoop()
    while autoFishingRunning do
        if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") or 
           not LocalPlayer.Character:FindFirstChild("Humanoid") or 
           LocalPlayer.Character.Humanoid.Health <= 0 then
            task.wait(1)
            continue
        end
        
        if not FishingController then
            task.wait(1)
            continue
        end
        
        if Config.FishingMode == "Instant" then
            local success = pcall(runInstantFishingCycle)
            if not success then
                wait(1)
            else
                wait(0.3)
            end
        else -- Normal Mode
            runNormalFishingCycle()
        end
    end
    
    -- หยุด thread สำหรับ Instant mode
    if Config.FishingMode == "Instant" then
        stopCurrentThread()
    end
end

local function initializeAutoFishing()
    FishingController = require(ReplicatedStorage.Controllers.FishingController)
    
    if not bestRodEquipped then
        equipBestRod()
        wait(0.5)
        bestRodEquipped = true
    end
    
    if not bestBaitEquipped then
        equipBestBait()
        wait(0.5)
        bestBaitEquipped = true
    end
    
    -- ถือ Rod ใน hotbar slot 1
    local hotbarArgs = { 1 }
    equipBaitFromHotbar:FireServer(unpack(hotbarArgs))
    wait(0.2)
end

local function startAutoFishing()
    teleportToFishingSpot()
    wait(1)
    
    initializeAutoFishing()
    
    task.spawn(autoFishingLoop)
end

-- ========================================
-- START EVERYTHING AUTOMATICALLY
-- ========================================

local function startEverything()    
    wait(2)
    
    print("Fishing Mode: " .. Config.FishingMode)
    
    if hasAstralRod() then
        isQuestMode = true
        currentFishingLocation = "normal"
        
        startQuestSystem()
        
        wait(2)
        local questProgress = FishingData.checkQuestStatus()
        setFishingLocationByQuest(questProgress)
        
        if hasLocationChanged then
            teleportToFishingSpot()
            hasLocationChanged = false
        end
    else
        isQuestMode = false
        currentFishingLocation = "normal"
    end
    
    setupDeathRecovery()
    equipBestRod()
    bestRodEquipped = true
    equipBestBait()
    bestBaitEquipped = true
    startAntiAfk()
    startAutoSell()
    startAutoBuyRods()
    startAutoBuyBait() -- เพิ่มระบบ Auto Buy Bait
    startAutoFishing()
    
    -- รอให้ระบบทั้งหมดเริ่มทำงานเสร็จก่อน
    wait(5)
    
    -- Load UI จาก GitHub เป็นอันดับสุดท้าย
    spawn(function()
        local maxAttempts = 5
        local attempt = 1
        
        while attempt <= maxAttempts do
            local success, result = pcall(function()
                return loadstring(game:HttpGet("https://raw.githubusercontent.com/MojiHIght/99Night/refs/heads/main/fishitui"))()
            end)
            
            if success then
                break
            else
                if attempt < maxAttempts then
                    wait(3)
                end
            end
            attempt = attempt + 1
        end
    end)
end

-- เปิดให้ UI เข้าถึงฟังชันหลัก
FishingData.startEverything = startEverything

startEverything()
